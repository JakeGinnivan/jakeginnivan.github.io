<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: ReSharper | Jake Ginnivan's blog]]></title>
  <link href="http://jake.ginnivan.net/blog/categories/resharper/atom.xml" rel="self"/>
  <link href="http://jake.ginnivan.net/"/>
  <updated>2014-06-11T00:14:30+08:00</updated>
  <id>http://jake.ginnivan.net/</id>
  <author>
    <name><![CDATA[Jake Ginnivan]]></name>
    <email><![CDATA[jake@ginnivan.net]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[ReSharper Xaml Attribute Ordering Plug-in]]></title>
    <link href="http://jake.ginnivan.net/resharper-xaml-attribute-ordering-plugin/"/>
    <updated>2013-09-09T00:00:00+08:00</updated>
    <id>http://jake.ginnivan.net/resharper-xaml-attribute-ordering-plugin</id>
    <content type="html"><![CDATA[<p>A while back I got introduced to <a href="https://xamlstyler.codeplex.com/">https://xamlstyler.codeplex.com/</a> which is a pretty good visual studio plug-in for formatting xaml, but I like ReSharper&rsquo;s formatting options better :)</p>

<p>So over the weekend I was at <a href="http://www.jetbrains.com/jetbrainsday/">JetBrains Day</a> in Malmo, and Matt Ellis did a talk on ReSharper extensions. I figured it would be a good time to try and write a plug-in.</p>

<p>Here are some screenshots</p>

<p><img src="/assets/posts/2013-09-09-resharper-xaml-attribute-ordering-plugin/Capture1.PNG" alt="Moar Xaml Code Cleanups" /></p>

<p><img src="/assets/posts/2013-09-09-resharper-xaml-attribute-ordering-plugin/Capture2.PNG" alt="Options" /></p>

<p>Now, I don&rsquo;t expect this to be super stable and I know of a few issues (like when you first format the Window tag is not quite formatted right), but I hope to setup a CI build and get some fixes out over the next week or so.</p>

<p>Check out the code, report issues and submit pull requests at <a href="https://github.com/JakeGinnivan/XamlAttributeOrderingCodeCleanup">https://github.com/JakeGinnivan/XamlAttributeOrderingCodeCleanup</a> and install from <a href="https://resharper-plugins.jetbrains.com/packages/JetBrains.ReSharper.Plugins.XamlAttributeOrdering/">ReSharper Extensions Site</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[No more R# warnings for nHibernate aliases]]></title>
    <link href="http://jake.ginnivan.net/nhibernate-alias-warnings/"/>
    <updated>2011-07-21T00:00:00+08:00</updated>
    <id>http://jake.ginnivan.net/nhibernate-alias-warnings</id>
    <content type="html"><![CDATA[<p>I dislike having R# warnings in code bases I work on, and try to leave every class I work on having a green status.</p>

<p>Here is a scenario</p>

<pre><code>var entryAlias = default(Entry);
var entries = session.QueryOver&lt;Entry&gt;(()=&gt;entryAlias);
</code></pre>

<p>In the above scenario R# will warn that entryAlias is always null, which is is, but I don&rsquo;t care, nHibernate is simply getting the type from the expression.</p>

<!-- more -->


<p>So I have created a simple static class:</p>

<pre><code>/// &lt;summary&gt;
/// Simple helper class to remove r# warnings when using nHibernate aliases
/// &lt;/summary&gt;
public static class Alias
{
    public static T For&lt;T&gt;()
    {
        return default(T);
    }
}
</code></pre>

<p>And we turn the above code into:</p>

<pre><code>var entryAlias = Alias.For&lt;Entry&gt;();
var entries = session.QueryOver&lt;Entry&gt;(()=&gt;entryAlias);
</code></pre>

<p>Which does not warn.</p>

<p>Happy Resharpering</p>
]]></content>
  </entry>
  
</feed>
